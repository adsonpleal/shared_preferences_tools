// Mocks generated by Mockito 5.4.4 from annotations
// in shared_preferences_tools_devtools_extension/test/src/presentation/shared_preferences_tools_body_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences_tools/shared_preferences_tools.dart' as _i4;

import 'shared_preferences_tools_body_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FakeChangeValue].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeChangeValue extends _i1.Mock implements _i2.FakeChangeValue {
  @override
  _i3.Future<void> call({
    required String? key,
    String? value = r'',
    required _i4.SharedPreferencesDataType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #key: key,
            #value: value,
            #type: type,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
